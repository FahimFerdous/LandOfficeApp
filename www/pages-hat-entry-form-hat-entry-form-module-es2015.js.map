{"version":3,"sources":["/./src/app/pages/hat-entry-form/hat-entry-form.page.html","/./src/app/model/hat.ts","/./src/app/pages/hat-entry-form/hat-entry-form.module.ts","/./src/app/pages/hat-entry-form/hat-entry-form.page.scss","/./src/app/pages/hat-entry-form/hat-entry-form.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,gvBAAgvB,mBAAmB,okB;;;;;;;;;;;;ACAnwB;AAAA;AAAO,MAAM,GAAG;CAMX;;;;;;;;;;;;;;;;;;;;;;;ACNoC;AACM;AACF;AACU;AAEV;AAEY;AAEzD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qEAAgB;KAC5B;CACF,CAAC;AAYF,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB;CAAI;AAA1B,sBAAsB;IAVlC,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;SAC9B;QACD,YAAY,EAAE,CAAC,qEAAgB,CAAC;KAEjC,CAAC;GACW,sBAAsB,CAAI;AAAJ;;;;;;;;;;;;AC1BnC,+DAA+D,mK;;;;;;;;;;;;;;;;;;;;;ACCL;AACG;AACvB;AAE8B;AACnB;AAMjD,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IAK3B,YAAoB,iBAAkC,EAC5C,WAAsB,EAAS,eAAgC;QADrD,sBAAiB,GAAjB,iBAAiB,CAAiB;QAC5C,gBAAW,GAAX,WAAW,CAAW;QAAS,oBAAe,GAAf,eAAe,CAAiB;QAL3E,QAAG,GAAC,IAAI,8CAAG,EAAE,CAAC;IAKiE,CAAC;IAE9E,QAAQ;QACN,IAAI,YAAY,GAAG,IAAI,CAAC,iBAAiB,CAAC,eAAe,EAAE,CAAC;QAE5D,IAAI,CAAC,YAAY,GAAE,YAAY,CAAC,eAAe,EAAE,CAAC,IAAI,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAGxE,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;YACpB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBAErB,IAAI,CAAC,GAAG,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;gBAEjC,CAAC,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC;gBAEvB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACP,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAc,CAAC,CAAC;YAE9C,CAAC,CAAC,CAAC;QAEH,CAAC,CAAC;IAEN,CAAC;IAGD,WAAW;QACT,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IAClC,CAAC;IAKK,IAAI,CAAC,GAAG;;YACZ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,MAAM,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAE;gBACvC,MAAM,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;oBACxC,OAAO,EAAC,mBAAmB;oBAC3B,QAAQ,EAAC,IAAI;iBACd,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,EAAC,EAAE;oBACnB,SAAS,CAAC,OAAO,EAAE,CAAC;gBACtB,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,GAAG,GAAC,IAAI,8CAAG,EAAE,CAAC;QAErB,CAAC;KAAA;CACF;;YA/CuC,4EAAgB;YAChC,gEAAU;YAA0B,8DAAe;;AAN9D,gBAAgB;IAL5B,+DAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,wKAAyC;;KAE1C,CAAC;2EAMsC,4EAAgB;QAChC,gEAAU,EAA0B,8DAAe;GAN9D,gBAAgB,CAoD5B;AApD4B","file":"pages-hat-entry-form-hat-entry-form-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button defaultHref=\\\"/app/tabs/speakers\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Enter Hat Name</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"ion-padding speaker-detail\\\">\\r\\n  <div class=\\\"ion-text-center\\\">\\r\\n\\r\\n    <form novalidate>\\r\\n      <ion-list>\\r\\n        <ion-item>\\r\\n          <ion-label>Select Pourosova</ion-label>\\r\\n          <ion-select #pourosovaId=\\\"ngModel\\\" [(ngModel)]=\\\"hat.pourosovaId\\\" name=\\\"pourosovaId\\\" value=\\\"brown\\\" okText=\\\"Okay\\\" cancelText=\\\"Dismiss\\\">\\r\\n            <ion-select-option *ngFor=\\\"let c of pourosova\\\"  [value]=\\\"c.key\\\">\\r\\n               {{ c.pourosovaName }}\\r\\n              </ion-select-option>\\r\\n               \\r\\n          </ion-select>\\r\\n        </ion-item>\\r\\n        <ion-item>\\r\\n          <ion-input #hatName=\\\"ngModel\\\" [(ngModel)]=\\\"hat.hatName\\\" name=\\\"hatName\\\" clearInput placeholder=\\\"Hat Name\\\"></ion-input>\\r\\n\\r\\n\\r\\n        </ion-item>\\r\\n\\r\\n\\r\\n      </ion-list>\\r\\n\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-button (click)=\\\"save(hat)\\\" type=\\\"submit\\\" expand=\\\"block\\\">Submit</ion-button>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </form>\\r\\n\\r\\n\\r\\n\\r\\n  </div>\\r\\n\\r\\n\\r\\n</ion-content>\"","export class Hat { \r\n   \r\n    key:string;\r\n    pourosovaId:string;\r\n    hatName:string;\r\n     \r\n    }","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { HatEntryFormPage } from './hat-entry-form.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HatEntryFormPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [HatEntryFormPage]\r\n\r\n})\r\nexport class HatEntryFormPageModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2hhdC1lbnRyeS1mb3JtL2hhdC1lbnRyeS1mb3JtLnBhZ2Uuc2NzcyJ9 */\"","import { Pourosova } from './../../model/pourosova';\r\nimport { HatService } from './../../services/hat.service';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Hat } from '../../model/hat';\r\nimport { Subscription } from 'rxjs';\r\nimport { PourosovaService } from '../../services/pourosova.service';\r\nimport { ToastController } from '@ionic/angular';\r\n@Component({\r\n  selector: 'hat-entry-form',\r\n  templateUrl: './hat-entry-form.page.html',\r\n  styleUrls: ['./hat-entry-form.page.scss'],\r\n})\r\nexport class HatEntryFormPage implements OnInit,OnDestroy {\r\nhat=new Hat();\r\nsubscription: Subscription;\r\npourosova:Pourosova[];\r\n\r\n  constructor(private pourosovaServices:PourosovaService,\r\n    private hatServices:HatService,private toastController: ToastController) { }\r\n\r\n  ngOnInit() {\r\n    var allPourosova = this.pourosovaServices.getAllPourosova();\r\n    \r\n    this.subscription= allPourosova.snapshotChanges().pipe().subscribe(item => {\r\n     \r\n      \r\n      this.pourosova = [];\r\n      item.forEach(element => {\r\n       \r\n        var y = element.payload.toJSON();\r\n        \r\n        y[\"key\"] = element.key;  \r\n        \r\n        console.log(y);\r\n                this.pourosova.push(y as Pourosova);\r\n                  \r\n      });   \r\n    \r\n      })\r\n\r\n  }\r\n\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n\r\n\r\n\r\n  async save(hat){\r\n    console.log(hat);\r\n    await this.hatServices.save(hat).then(t=>{\r\n      const toast=  this.toastController.create({\r\n        message:'Saved Succesfully',\r\n        duration:2000\r\n      }).then((toastData)=>{        \r\n        toastData.present();\r\n      });\r\n    });\r\n\r\n    this.hat=new Hat();\r\n    \r\n  }\r\n}\r\n\r\n"],"sourceRoot":""}